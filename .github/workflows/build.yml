name: Build Fat JAR and Deploy to Heroku

on:
  pull_request:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Check out the repository
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Set up Java
      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      # Step 3: Cache Gradle dependencies
      - name: Cache Gradle dependencies
        uses: actions/cache@v3
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      # Step 4: Build the fat JAR using custom task
      - name: Build Fat JAR
        run: ./gradlew buildFatJar

      # Step 5: Upload the fat JAR as an artifact
      - name: Upload fat JAR
        uses: actions/upload-artifact@v3
        with:
          name: fat-jar
          path: server/build/libs/server-all.jar

  deploy:
    runs-on: ubuntu-latest
    needs: build  # This makes sure that the build job runs before the deploy job

    steps:
      # Step 1: Download the artifact from the previous job
      - name: Download fat JAR artifact
        uses: actions/download-artifact@v3
        with:
          name: fat-jar

      # Step 2: Set up Heroku CLI
      - name: Install Heroku CLI
        run: |
          curl https://cli-assets.heroku.com/install.sh | sh
          heroku --version

      # Step 3: Authenticate with Heroku
      - name: Heroku authentication
        run: |
          echo "machine api.heroku.com" > ~/.netrc
          echo "  login ${{ secrets.HEROKU_EMAIL }}" >> ~/.netrc
          echo "  password ${{ secrets.HEROKU_API_KEY }}" >> ~/.netrc

      # Step 4: Deploy to Heroku
      - name: Deploy to Heroku
        run: |
          heroku deploy:jar server/build/libs/server-all.jar --app ${{ secrets.HEROKU_APP_NAME }}
