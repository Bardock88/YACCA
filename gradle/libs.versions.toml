[versions]
agp = "8.7.3"
android-compileSdk = "34"
android-minSdk = "24"
android-targetSdk = "34"
androidx-activityCompose = "1.9.3"
androidx-appcompat = "1.7.3"
androidx-constraintlayout = "2.2.0"
androidx-core-ktx = "1.15.0"
androidx-espresso-core = "3.6.1"
androidx-lifecycle = "2.8.4"
androidx-material = "1.12.0"
androidx-test-junit = "1.2.1"
compose-multiplatform = "1.7.0"
junit = "4.13.2"
kotlin = "2.1.0"
ktor = "3.0.2"
logback = "1.5.12"
commons-codec = "1.15"
buildConfig = "0.15.2"
exposed = "0.42.0"
postgresql = "42.7.2"
flyway = "9.22.0"
coroutines = "1.10.1"
koin = "4.0.0"
serialization = "1.8.0"
dataStore = "1.1.2"
kmpSettings = "1.3.0"
encryptedSharedPreferences = "1.1.0-alpha06"
kmpLogging = "1.5.0"
statelyCommon = "2.1.0"
room = "2.7.0-alpha12"
sqlite = "2.5.0-SNAPSHOT"
ksp = "2.1.0-1.0.29"

[libraries]
# test
kotlin-test-junit = { module = "org.jetbrains.kotlin:kotlin-test-junit", version.ref = "kotlin" }

# android
androidx-activity-compose = { module = "androidx.activity:activity-compose", version.ref = "androidx-activityCompose" }

# mobile persistence
room-runtimeAndroid = { module = "androidx.room:room-runtime-android", version.ref = "room" }
room-runtime = { module = "androidx.room:room-runtime", version.ref = "room" }
room-compiler = { module = "androidx.room:room-compiler", version.ref = "room" }
sqlite-bundled = { module = "androidx.sqlite:sqlite-bundled", version.ref = "sqlite" }
kmpSettigns = { module = "com.russhwolf:multiplatform-settings", version.ref = "kmpSettings" }
encryptedSharedPreferences = { module = "androidx.security:security-crypto", version.ref = "encryptedSharedPreferences" }

# commmon mobile
androidx-lifecycle-viewmodel = { group = "org.jetbrains.androidx.lifecycle", name = "lifecycle-viewmodel", version.ref = "androidx-lifecycle" }
androidx-lifecycle-runtime-compose = { group = "org.jetbrains.androidx.lifecycle", name = "lifecycle-runtime-compose", version.ref = "androidx-lifecycle" }
dataStore-preferences = { module = "androidx.datastore:datastore-preferences", version.ref = "dataStore" }

# logging
logback = { module = "ch.qos.logback:logback-classic", version.ref = "logback" }
kmpLogging = { module = "org.lighthousegames:logging", version.ref = "kmpLogging" }

#ktor
ktor-server-core = { module = "io.ktor:ktor-server-core-jvm", version.ref = "ktor" }
ktor-server-netty = { module = "io.ktor:ktor-server-netty-jvm", version.ref = "ktor" }
ktor-server-auth = { module = "io.ktor:ktor-server-auth", version.ref = "ktor" }
ktor-server-authJwt = { module = "io.ktor:ktor-server-auth-jwt", version.ref = "ktor" }
ktor-server-logging = { module = "io.ktor:ktor-server-call-logging-jvm", version.ref = "ktor" }
ktor-server-serialization = { module = "io.ktor:ktor-serialization-kotlinx-json-jvm", version.ref = "ktor" }
ktor-server-contentNegotiation = { module = "io.ktor:ktor-server-content-negotiation-jvm", version.ref = "ktor" }
ktor-client-core = { module = "io.ktor:ktor-client-core", version.ref = "ktor" }
ktor-client-cio = { module = "io.ktor:ktor-client-cio", version.ref = "ktor" }
ktor-client-contentNegotiation = { module = "io.ktor:ktor-client-content-negotiation", version.ref = "ktor" }
ktor-client-json = { module = "io.ktor:ktor-client-json", version.ref = "ktor" }
ktor-client-serialization = { module = "io.ktor:ktor-client-serialization", version.ref = "ktor" }
ktor-client-serializationJson = { module = "io.ktor:ktor-serialization-kotlinx-json", version.ref = "ktor" }
ktor-client-okhttp = { module = "io.ktor:ktor-client-okhttp", version.ref = "ktor" }
ktor-client-darwin = { module = "io.ktor:ktor-client-darwin", version.ref = "ktor" }
ktor-client-auth = { module = "io.ktor:ktor-client-auth", version.ref = "ktor" }
ktor-client-logging = { module = "io.ktor:ktor-client-logging", version.ref = "ktor" }

# database
exposed-core = { module = "org.jetbrains.exposed:exposed-core", version.ref = "exposed" }
exposed-dao = { module = "org.jetbrains.exposed:exposed-dao", version.ref = "exposed" }
exposed-datetime = { module = "org.jetbrains.exposed:exposed-kotlin-datetime", version.ref = "exposed" }
exposed-jdbc = { module = "org.jetbrains.exposed:exposed-jdbc", version.ref = "exposed" }
postgresql = { module = "org.postgresql:postgresql", version.ref = "postgresql" }
flyway = { module = "org.flywaydb:flyway-core", version.ref = "flyway" }


# kotlinx
kotlinx-coroutines-core = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "coroutines" }
kotlinx-coroutines-android = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-android", version.ref = "coroutines" }
serialization = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "serialization" }

# koin
koin-core = { module = "io.insert-koin:koin-core", version.ref = "koin" }
koin-android = { module = "io.insert-koin:koin-android", version.ref = "koin" }
koin-compose = { module = "io.insert-koin:koin-compose", version.ref = "koin" }
koin-composeViewModel = { module = "io.insert-koin:koin-compose-viewmodel", version.ref = "koin" }
koin-composeViewModelNavigation = { module = "io.insert-koin:koin-compose-viewmodel-navigation", version.ref = "koin" }

# other
stately-common = { module = "co.touchlab:stately-common", version.ref = "statelyCommon" }
commons-codec = { module = "commons-codec:commons-codec", version.ref = "commons-codec" }

[bundles]
server-ktorServer = [
    "ktor-server-core",
    "ktor-server-netty",
    "ktor-server-auth",
    "ktor-server-authJwt",
    "ktor-server-logging",
    "ktor-server-serialization",
    "ktor-server-contentNegotiation",
]
server-ktorClient = [
    "ktor-client-core",
    "ktor-client-cio",
    "ktor-client-json",
    "ktor-client-serialization",
    "ktor-client-contentNegotiation",
]
server-database = [
    "exposed-core",
    "exposed-dao",
    "exposed-datetime",
    "exposed-jdbc",
    "postgresql",
    "flyway",
]
mobile-ktorClient = [
    "ktor-client-core",
    "ktor-client-json",
    "ktor-client-serialization",
    "ktor-client-serializationJson",
    "ktor-client-contentNegotiation",
    "ktor-client-logging",
    "ktor-client-auth",
]
mobile-koin = [
    "koin-core",
    "koin-compose",
    "koin-composeViewModel",
    "koin-composeViewModelNavigation",
]
mobile-persistence = [
    "kmpSettigns",
    "dataStore-preferences",
    "room-runtime",
    "sqlite-bundled",
]

[plugins]
androidApplication = { id = "com.android.application", version.ref = "agp" }
androidLibrary = { id = "com.android.library", version.ref = "agp" }
composeMultiplatform = { id = "org.jetbrains.compose", version.ref = "compose-multiplatform" }
composeCompiler = { id = "org.jetbrains.kotlin.plugin.compose", version.ref = "kotlin" }
kotlinJvm = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlin" }
ktor = { id = "io.ktor.plugin", version.ref = "ktor" }
serialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }
room = { id = "androidx.room", version.ref = "room" }
kotlinMultiplatform = { id = "org.jetbrains.kotlin.multiplatform", version.ref = "kotlin" }
ksp = { id = "com.google.devtools.ksp", version.ref = "ksp" }
buildConfig = { id = "com.codingfeline.buildkonfig", version.ref = "buildConfig" }